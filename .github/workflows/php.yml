name: PHP Composer
description: A small exercise

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test

    - name: Run PHPUnit tests
      continue-on-error: true
      run: vendor/bin/phpunit tests --log-junit junit.xml

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: phpunit-junit-report
        path: junit.xml
        description: PHPUnit test results in JUnit XML format

  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build  # Ensure tests run before this job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t my-php-app:latest .

      # - name: Push Docker image
      #   run: |
      #     docker tag my-php-app:latest mydockeruser/my-php-app:latest
      #     docker push mydockeruser/my-php-app:latest
